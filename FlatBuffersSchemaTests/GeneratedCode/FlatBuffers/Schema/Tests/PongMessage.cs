// automatically generated by the FlatBuffers compiler, do not modify

namespace FlatBuffers.Schema.Tests
{

using System;
using FlatBuffers;

public struct PongMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PongMessage GetRootAsPongMessage(ByteBuffer _bb) { return GetRootAsPongMessage(_bb, new PongMessage()); }
  public static PongMessage GetRootAsPongMessage(ByteBuffer _bb, PongMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PongMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Count { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Msg { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetMsgBytes() { return __p.__vector_as_arraysegment(6); }

  public static Offset<PongMessage> CreatePongMessage(FlatBufferBuilder builder,
      int count = 0,
      StringOffset msgOffset = default(StringOffset)) {
    builder.StartObject(2);
    PongMessage.AddMsg(builder, msgOffset);
    PongMessage.AddCount(builder, count);
    return PongMessage.EndPongMessage(builder);
  }

  public static void StartPongMessage(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddCount(FlatBufferBuilder builder, int count) { builder.AddInt(0, count, 0); }
  public static void AddMsg(FlatBufferBuilder builder, StringOffset msgOffset) { builder.AddOffset(1, msgOffset.Value, 0); }
  public static Offset<PongMessage> EndPongMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PongMessage>(o);
  }
  public static void FinishPongMessageBuffer(FlatBufferBuilder builder, Offset<PongMessage> offset) { builder.Finish(offset.Value); }
};


}
